
R version 3.4.3 (2017-11-30) -- "Kite-Eating Tree"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.3.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require(etm)
Loading required package: etm
> 
> ### Simple test
> 
> time <- id <- 1:10
> from <- rep(0, 10)
> to <- rep(1, 10)
> 
> data1 <- data.frame(id, from, to, time)
> tra1 <- matrix(FALSE, 2, 2)
> tra1[1, 2] <- TRUE
> 
> etm1 <- etm(data1, c("0", "1"), tra1, NULL, 0)
> 
> all.equal(as.vector(trprob(etm1, "0 0")), cumprod((10:1 - 1) / (10:1)))
[1] TRUE
> 
> etm1$cov["0 0", "0 0", ]
    1     2     3     4     5     6     7     8     9    10 
0.009 0.016 0.021 0.024 0.025 0.024 0.021 0.016 0.009 0.000 
> 
> all.equal(etm1$cov["0 0", "0 0",], trcov(etm1, "0 0"))
[1] TRUE
> 
> 
> ### a bit more complicated
> 
> time <- id <- 1:10
> from <- rep(0, 10)
> to <- rep(c(1, 2), 5)
> data2 <- data.frame(id, from, to, time)
> 
> tra2 <- matrix(FALSE, 3, 3)
> tra2[1, 2:3] <- TRUE
> 
> etm2 <- etm(data2, c("0", "1", "2"), tra2, NULL, 0)
> 
> aa <- table(time, to)
> 
> cif1 <- cumsum(aa[, 1] / 10)
> cif2 <- cumsum(aa[, 2] / 10)
> surv <- cumprod((10:1 - 1) / (10:1))
> 
> all.equal(trprob(etm2, "0 1"), cif1)
[1] TRUE
> all.equal(trprob(etm2, "0 2"), cif2)
[1] TRUE
> all.equal(as.vector(trprob(etm2, "0 0")), surv)
[1] TRUE
> 
> ## a test on id
> data2$id <- letters[1:10]
> 
> etm3 <- etm(data2, c("0", "1", "2"), tra2, NULL, 0)
> 
> all.equal(trprob(etm2, "0 1"), trprob(etm3, "0 1"))
[1] TRUE
> all.equal(trprob(etm2, "0 2"), trprob(etm3, "0 2"))
[1] TRUE
> all.equal(trprob(etm2, "0 0"), trprob(etm3, "0 0"))
[1] TRUE
> 
> 
> ### Test on sir.cont
> 
> data(sir.cont)
> 
> ## Modification for patients entering and leaving a state
> ## at the same date
> ## Change on ventilation status is considered
> ## to happen before end of hospital stay
> sir.cont <- sir.cont[order(sir.cont$id, sir.cont$time), ]
> for (i in 2:nrow(sir.cont)) {
+     if (sir.cont$id[i]==sir.cont$id[i-1]) {
+         if (sir.cont$time[i]==sir.cont$time[i-1]) {
+             sir.cont$time[i-1] <- sir.cont$time[i-1] - 0.5
+         }
+     }
+ }
> 
> ### Computation of the transition probabilities
> ## Possible transitions.
> tra <- matrix(ncol=3,nrow=3,FALSE)
> tra[1, 2:3] <- TRUE
> tra[2, c(1, 3)] <- TRUE
> 
> ## etm
> prob.sir <- etm(sir.cont, c("0", "1", "2"), tra, "cens", 1)
> 
> prob.sir
Multistate model with 2 transient state(s)
 and 1 absorbing state(s)

Possible transitions:
 from to
    0  1
    0  2
    1  0
    1  2

Estimate of P(1, 183)
  0 1 2
0 0 0 1
1 0 0 1
2 0 0 1

> 
> summ.sir <- summary(prob.sir)
Warning messages:
1: In sqrt(var) : NaNs produced
2: In sqrt(var) : NaNs produced
> all.equal(summ.sir[['0 1']]$P, as.vector(trprob(prob.sir, "0 1")))
[1] TRUE
> summ.sir[[3]]
             P  time          var      lower     upper n.risk n.event
1.5  0.0000000   1.5 0.000000e+00 0.00000000 0.0000000    394       0
2    0.1186869   2.0 2.641422e-04 0.08683265 0.1505411    396      47
2.5  0.1186869   2.5 2.641422e-04 0.08683265 0.1505411    364       0
3    0.2453993   3.0 4.465256e-04 0.20398301 0.2868156    365      54
3.5  0.2453993   3.5 4.465256e-04 0.20398301 0.2868156    328       0
4    0.3806244   4.0 5.416492e-04 0.33500942 0.4262393    331      62
4.5  0.3806244   4.5 5.416492e-04 0.33500942 0.4262393    280       0
5    0.4792121   5.0 5.480328e-04 0.43332915 0.5250951    283      48
5.5  0.4792121   5.5 5.480328e-04 0.43332915 0.5250951    248       0
6    0.5692649   6.0 5.141238e-04 0.52482414 0.6137058    249      47
7    0.6349924   7.0 4.665144e-04 0.59265929 0.6773256    212      36
8    0.6794916   8.0 4.202391e-04 0.63931284 0.7196703    195      27
8.5  0.6794916   8.5 4.202391e-04 0.63931284 0.7196703    172       0
9    0.7324895   9.0 3.579860e-04 0.69540594 0.7695730    173      34
10   0.7646506  10.0 3.140867e-04 0.72991512 0.7993860    148      21
10.5 0.7646506  10.5 3.140867e-04 0.72991512 0.7993860    135       0
11   0.7894789  11.0 2.789769e-04 0.75674237 0.8222154    136      18
12   0.8137852  12.0 2.419720e-04 0.78329710 0.8442733    129      18
12.5 0.8137852  12.5 2.419720e-04 0.78329710 0.8442733    117       0
13   0.8293991  13.0 2.181963e-04 0.80044760 0.8583507    118      13
14   0.8451773  14.0 1.938437e-04 0.81788913 0.8724654    115      14
15   0.8624687  15.0 1.670243e-04 0.83713851 0.8877988    106      15
16   0.8722513  16.0 1.522153e-04 0.84807011 0.8964324     93       9
17   0.8851601  17.0 1.329865e-04 0.86255784 0.9077624     86      12
17.5 0.8851601  17.5 1.329865e-04 0.86255784 0.9077624     77       0
18   0.8960254  18.0 1.167891e-04 0.87484428 0.9172066     76       9
19   0.9028854  19.0 1.069942e-04 0.88261196 0.9231589     71       7
20   0.9125267  20.0 9.367135e-05 0.89355740 0.9314960     64      10
21   0.9161439  21.0 8.878103e-05 0.89767636 0.9346114     57       4
22   0.9225643  22.0 7.995614e-05 0.90503865 0.9400899     55       6
23   0.9260521  23.0 7.536948e-05 0.90903660 0.9430677     51       4
23.5 0.9260521  23.5 7.536948e-05 0.90903660 0.9430677     49       0
24   0.9353639  24.0 6.292082e-05 0.91981690 0.9509108     50       9
25   0.9385430  25.0 5.877878e-05 0.92351645 0.9535695     42       3
26   0.9429383  26.0 5.325890e-05 0.92863472 0.9572418     39       5
27   0.9476771  27.0 4.748795e-05 0.93417068 0.9611835     35       6
27.5 0.9476771  27.5 4.748795e-05 0.93417068 0.9611835     29       0
28   0.9531288  28.0 4.092631e-05 0.94059022 0.9656674     30       5
29   0.9567220  29.0 3.667615e-05 0.94485230 0.9685917     31       4
30   0.9591876  30.0 3.383912e-05 0.94778617 0.9705889     28       3
30.5 0.9591876  30.5 3.383912e-05 0.94778617 0.9705889     29       0
31   0.9642349  31.0 2.820676e-05 0.95382549 0.9746442     30       6
32   0.9648667  32.0 2.752066e-05 0.95458472 0.9751487     25       1
33   0.9669455  33.0 2.533123e-05 0.95708094 0.9768100     24       2
34   0.9685356  34.0 2.367984e-05 0.95899806 0.9780732     26       2
35   0.9696628  35.0 2.251767e-05 0.96036219 0.9789633     28       2
36   0.9702263  36.0 2.194423e-05 0.96104495 0.9794077     26       1
37   0.9717546  37.0 2.043249e-05 0.96289513 0.9806141     26       2
38   0.9739393  38.0 1.831026e-05 0.96555250 0.9823261     25       4
38.5 0.9739393  38.5 1.831026e-05 0.96555250 0.9823261     21       0
39   0.9759610  39.0 1.643312e-05 0.96801570 0.9839062     23       3
40   0.9769163  40.0 1.557773e-05 0.96918064 0.9846521     19       1
41   0.9774305  41.0 1.511599e-05 0.96981026 0.9850507     22       1
42   0.9778509  42.0 1.475784e-05 0.97032155 0.9853803     22       0
43   0.9798010  43.0 1.307925e-05 0.97271272 0.9868892     22       3
44   0.9803023  44.0 1.265491e-05 0.97333000 0.9872746     21       1
45   0.9816513  45.0 1.156647e-05 0.97498560 0.9883171     19       1
46   0.9821527  46.0 1.115820e-05 0.97560565 0.9886997     17       1
47   0.9831389  47.0 1.037038e-05 0.97682722 0.9894506     18       2
48   0.9836281  48.0 9.986572e-06 0.97743435 0.9898219     17       1
49   0.9840553  49.0 9.669176e-06 0.97796078 0.9901499     17       0
50   0.9845409  50.0 9.296786e-06 0.97856487 0.9905170     17       1
50.5 0.9845409  50.5 9.296786e-06 0.97856487 0.9905170     16       0
51   0.9859918  51.0 8.213748e-06 0.98037462 0.9916090     17       3
52   0.9869591  52.0 7.512700e-06 0.98158694 0.9923312     14       2
53   0.9878950  53.0 6.874544e-06 0.98275613 0.9930339     12       1
54   0.9888571  54.0 6.213830e-06 0.98397136 0.9937428     12       2
55   0.9903001  55.0 5.253896e-06 0.98580762 0.9947926     10       3
56   0.9912678  56.0 4.666932e-06 0.98703372 0.9955020      6       1
57   0.9917489  57.0 4.363513e-06 0.98765469 0.9958430      5       1
58   0.9922299  58.0 4.064246e-06 0.98827860 0.9961812      4       1
59   0.9927109  59.0 3.769130e-06 0.98890578 0.9965160      3       1
60   0.9931938  60.0 3.488235e-06 0.98953323 0.9968544      3       1
62   0.9936805  62.0 3.229764e-06 0.99015816 0.9972029      2       0
63   0.9941634  63.0 2.955869e-06 0.99079373 0.9975331      2       1
68   0.9941634  68.0 2.955869e-06 0.99079373 0.9975331      1       0
70   0.9946482  70.0 2.693997e-06 0.99143126 0.9978652      2       1
78   0.9951349  78.0 2.442281e-06 0.99207193 0.9981979      1       0
80   0.9951349  80.0 2.442281e-06 0.99207193 0.9981979      1       0
85   0.9965950  85.0 1.695084e-06 0.99404323 0.9991468      2       0
89   0.9965950  89.0 1.695084e-06 0.99404323 0.9991468      2       0
90   0.9965950  90.0 1.695084e-06 0.99404323 0.9991468      1       0
95   0.9970816  95.0 1.448382e-06 0.99472276 0.9994403      2       0
100  0.9975681 100.0 1.203159e-06 0.99541824 0.9997180      3       0
101  0.9980544 101.0 9.591818e-07 0.99613482 0.9999739      3       1
108  0.9985406 108.0 7.169274e-07 0.99688111 1.0000000      2       1
113  0.9990272 113.0 4.763877e-07 0.99767440 1.0000000      1       0
116  0.9990272 116.0 4.763877e-07 0.99767440 1.0000000      1       0
124  0.9990272 124.0 4.763877e-07 0.99767440 1.0000000      2       0
164  0.9990272 164.0 4.763877e-07 0.99767440 1.0000000      0       0
183  1.0000000 183.0 1.336724e-19 1.00000000 1.0000000      1       1
> 
> ## gonna play a bit with the state names
> dd <- sir.cont
> dd$from <- ifelse(dd$from == 0, "initial state", "ventilation")
> dd$to <- as.character(dd$to)
> for (i in seq_len(nrow(dd))) {
+     dd$to[i] <- switch(dd$to[i],
+                     "0" = "initial state",
+                     "1" = "ventilation",
+                     "2" = "end of story",
+                     "cens" = "cens"
+                     )
+ }
> 
> test <- etm(dd, c("initial state", "ventilation", "end of story"), tra, "cens", 1)
> 
> all.equal(test$est["initial state", "initial state", ],
+           prob.sir$est["0", "0", ])
[1] TRUE
> all.equal(trprob(test, "initial state initial state"), trprob(prob.sir, "0 0"))
[1] TRUE
> all.equal(trprob(test, "initial state ventilation"), trprob(prob.sir, "0 1"))
[1] TRUE
> all.equal(trprob(test, "initial state end of story"), trprob(prob.sir, "0 2"))
[1] TRUE
> 
> all.equal(trcov(test, "initial state end of story"), trcov(prob.sir, "0 2"))
[1] TRUE
> 
> aa <- summary(test)
Warning messages:
1: In sqrt(var) : NaNs produced
2: In sqrt(var) : NaNs produced
> all.equal(summ.sir[[6]], aa[[6]])
[1] TRUE
> all.equal(summ.sir[[4]], aa[[4]])
[1] TRUE
> 
> ### Test on abortion data
> 
> data(abortion)
> 
> from <- rep(0, nrow(abortion))
> to <- abortion$cause
> entry <- abortion$entry
> exit <- abortion$exit
> id <- 1:nrow(abortion)
> data <- data.frame(id, from, to, entry, exit, group = abortion$group)
> 
> ## Computation of the CIFs
> tra <- matrix(FALSE, 4, 4)
> tra[1, 2:4] <- TRUE
> 
> cif.control <- etm(data[data$group == 0, ], c("0", "1", "2", "3"),
+                         tra, NULL, 0)
> cif.exposed <- etm(data[data$group == 1, ], c("0", "1", "2", "3"),
+                         tra, NULL, 0)
> 
> all.equal(trprob(cif.control, "0 1"), cif.control$est["0", "1", ])
[1] TRUE
> all.equal(trcov(cif.control, c("0 1", "0 2")), cif.control$cov["0 1", "0 2", ])
[1] TRUE
> 
> trprob(cif.control, "0 1")
          6           7           8           9          10          11 
0.000000000 0.007400858 0.014880870 0.026509184 0.033207696 0.037694266 
         12          13          14          17          19          21 
0.037694266 0.038954884 0.040159308 0.040159308 0.040159308 0.040159308 
         24          25          26          30          31          32 
0.040159308 0.040159308 0.040159308 0.040159308 0.040159308 0.040159308 
         33          34          35          36          37          38 
0.040159308 0.040159308 0.040159308 0.040159308 0.040159308 0.040159308 
         39          40          41          42          43 
0.040159308 0.040159308 0.040159308 0.040159308 0.040159308 
> trprob(cif.control, "0 2")
          6           7           8           9          10          11 
0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 
         12          13          14          17          19          21 
0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 
         24          25          26          30          31          32 
0.000000000 0.000000000 0.000000000 0.003656854 0.006371445 0.008175002 
         33          34          35          36          37          38 
0.013542879 0.023317266 0.031259966 0.053197090 0.084528525 0.179162614 
         39          40          41          42          43 
0.322015902 0.563120872 0.742227421 0.793892771 0.799059306 
> trprob(cif.control, "0 0")
          6           7           8           9          10          11 
0.965811966 0.932508105 0.887628036 0.862433353 0.838988563 0.822537807 
         12          13          14          17          19          21 
0.813098849 0.810577612 0.806964339 0.805873846 0.803810149 0.802804129 
         24          25          26          30          31          32 
0.801836895 0.800883462 0.799936791 0.796279938 0.793565347 0.791761789 
         33          34          35          36          37          38 
0.786393913 0.776619525 0.768676825 0.745862216 0.714530781 0.619896693 
         39          40          41          42          43 
0.477043404 0.235938435 0.056831886 0.005166535 0.000000000 
> 
> trcov(cif.control, "0 1")
           6            7            8            9           10           11 
0.000000e+00 2.719306e-05 4.532753e-05 6.665019e-05 7.698480e-05 8.304209e-05 
          12           13           14           17           19           21 
8.304209e-05 8.444048e-05 8.570657e-05 8.570657e-05 8.570657e-05 8.570657e-05 
          24           25           26           30           31           32 
8.570657e-05 8.570657e-05 8.570657e-05 8.570657e-05 8.570657e-05 8.570657e-05 
          33           34           35           36           37           38 
8.570657e-05 8.570657e-05 8.570657e-05 8.570657e-05 8.570657e-05 8.570657e-05 
          39           40           41           42           43 
8.570657e-05 8.570657e-05 8.570657e-05 8.570657e-05 8.570657e-05 
> trcov(cif.control, "0 2")
           6            7            8            9           10           11 
0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 
          12           13           14           17           19           21 
0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 
          24           25           26           30           31           32 
0.000000e+00 0.000000e+00 0.000000e+00 3.338155e-06 5.784419e-06 7.401205e-06 
          33           34           35           36           37           38 
1.216141e-05 2.071916e-05 2.757764e-05 4.619460e-05 7.202415e-05 1.460900e-04 
          39           40           41           42           43 
2.469805e-04 3.880102e-04 4.701879e-04 4.903148e-04 4.922394e-04 
> trcov(cif.control, "0 0")
           6            7            8            9           10           11 
2.822155e-04 3.820769e-04 4.527000e-04 4.748082e-04 4.875383e-04 4.927267e-04 
          12           13           14           17           19           21 
4.940647e-04 4.941740e-04 4.941106e-04 4.939636e-04 4.935609e-04 4.933371e-04 
          24           25           26           30           31           32 
4.930834e-04 4.928195e-04 4.925502e-04 4.913851e-04 4.904884e-04 4.898842e-04 
          33           34           35           36           37           38 
4.880340e-04 4.845548e-04 4.816321e-04 4.728916e-04 4.601194e-04 4.175917e-04 
          39           40           41           42           43 
3.424805e-04 1.864578e-04 4.796800e-05 4.440837e-06 0.000000e+00 
> 
> aa <- summary(cif.control)
> aa$"0 1"
             P time          var      lower      upper n.risk n.event
6  0.000000000    6 0.000000e+00 0.00000000 0.00000000    117       0
7  0.007400858    7 2.719306e-05 0.00000000 0.01762148    261       2
8  0.014880870    8 4.532753e-05 0.00168527 0.02807647    374       3
9  0.026509184    9 6.665019e-05 0.01050812 0.04251025    458       6
10 0.033207696   10 7.698480e-05 0.01601078 0.05040461    515       4
11 0.037694266   11 8.304209e-05 0.01983362 0.05555491    561       3
12 0.037694266   12 8.304209e-05 0.01983362 0.05555491    610       0
13 0.038954884   13 8.444048e-05 0.02094448 0.05696529    645       1
14 0.040159308   14 8.570657e-05 0.02201438 0.05830423    673       1
17 0.040159308   17 8.570657e-05 0.02201438 0.05830423    740       0
19 0.040159308   19 8.570657e-05 0.02201438 0.05830423    781       0
21 0.040159308   21 8.570657e-05 0.02201438 0.05830423    799       0
24 0.040159308   24 8.570657e-05 0.02201438 0.05830423    830       0
25 0.040159308   25 8.570657e-05 0.02201438 0.05830423    841       0
26 0.040159308   26 8.570657e-05 0.02201438 0.05830423    846       0
30 0.040159308   30 8.570657e-05 0.02201438 0.05830423    875       0
31 0.040159308   31 8.570657e-05 0.02201438 0.05830423    880       0
32 0.040159308   32 8.570657e-05 0.02201438 0.05830423    880       0
33 0.040159308   33 8.570657e-05 0.02201438 0.05830423    885       0
34 0.040159308   34 8.570657e-05 0.02201438 0.05830423    885       0
35 0.040159308   35 8.570657e-05 0.02201438 0.05830423    880       0
36 0.040159308   36 8.570657e-05 0.02201438 0.05830423    876       0
37 0.040159308   37 8.570657e-05 0.02201438 0.05830423    857       0
38 0.040159308   38 8.570657e-05 0.02201438 0.05830423    823       0
39 0.040159308   39 8.570657e-05 0.02201438 0.05830423    716       0
40 0.040159308   40 8.570657e-05 0.02201438 0.05830423    554       0
41 0.040159308   41 8.570657e-05 0.02201438 0.05830423    274       0
42 0.040159308   42 8.570657e-05 0.02201438 0.05830423     66       0
43 0.040159308   43 8.570657e-05 0.02201438 0.05830423      6       0
> all.equal(aa$"0 1"$P, as.vector(trprob(cif.control, "0 1")))
[1] TRUE
> 
> ### test on los data
> 
> data(los.data) # in package changeLOS
> 
> ## putting los.data in the long format (see changeLOS)
> my.observ <- prepare.los.data(x=los.data)
> 
> tra <- matrix(FALSE, 4, 4)
> tra[1, 2:4] <- TRUE
> tra[2, 3:4] <- TRUE
> 
> tr.prob <- etm(my.observ, c("0","1","2","3"), tra, NULL, 0)
> 
> tr.prob
Multistate model with 2 transient state(s)
 and 2 absorbing state(s)

Possible transitions:
 from to
    0  1
    0  2
    0  3
    1  2
    1  3

Estimate of P(0, 82)
  0 1         2         3
0 0 0 0.7473545 0.2526455
1 0 0 0.7072985 0.2927015
2 0 0 1.0000000 0.0000000
3 0 0 0.0000000 1.0000000

> summary(tr.prob)
Transition 0 0 
           P time          var       lower       upper n.risk n.event
 0.882275132    3 1.373885e-04 0.859301836 0.905248429    756       0
 0.112433862   15 1.320006e-04 0.089915535 0.134952189     90       0
 0.031746032   27 4.065902e-05 0.019248434 0.044243630     26       0
 0.006613757   41 8.690496e-06 0.000835852 0.012391661      5       0
 0.002645503   61 3.490085e-06 0.000000000 0.006307062      3       0
 0.000000000   82 0.000000e+00 0.000000000 0.000000000      1       0

Transition 0 1 
           P time          var        lower      upper n.risk n.event
 0.017195767    3 2.235459e-05 0.0079289311 0.02646260    756      13
 0.063492063   15 7.865188e-05 0.0461099474 0.08087418     90       0
 0.030423280   27 3.901813e-05 0.0181804650 0.04266610     26       1
 0.015873016   41 2.066278e-05 0.0069637383 0.02478229      5       0
 0.005291005   61 6.961654e-06 0.0001196507 0.01046236      3       0
 0.000000000   82 0.000000e+00 0.0000000000 0.00000000      1       0

Transition 0 2 
          P time          var      lower     upper n.risk n.event
 0.08465608    3 0.0001024992 0.06481303 0.1044991    756      64
 0.62301587   15 0.0003106708 0.58846983 0.6575619     90       4
 0.69841270   27 0.0002786143 0.66569748 0.7311279     26       1
 0.72751323   41 0.0002622192 0.69577517 0.7592513      5       0
 0.74074074   61 0.0002540263 0.70950244 0.7719790      3       1
 0.74735450   82 0.0002497563 0.71637985 0.7783291      1       1

Transition 0 3 
          P time          var       lower      upper n.risk n.event
 0.01587302    3 2.066278e-05 0.006963738 0.02478229    756      12
 0.20105820   15 2.124786e-04 0.172488502 0.22962790     90       1
 0.23941799   27 2.408691e-04 0.208999432 0.26983655     26       0
 0.25000000   41 2.480159e-04 0.219133469 0.28086653      5       0
 0.25132275   61 2.488884e-04 0.220401973 0.28224353      3       0
 0.25264550   82 2.497563e-04 0.221670860 0.28362015      1       0

Transition 1 1 
          P time          var      lower      upper n.risk n.event
 1.00000000    3 0.000000e+00 1.00000000 1.00000000      0       0
 0.38661119   15 2.358121e-03 0.29143438 0.48178801     51       0
 0.12118830   27 7.841875e-04 0.06630275 0.17607386     23       0
 0.04593378   41 2.404897e-04 0.01553918 0.07632837     14       0
 0.01531126   61 6.579352e-05 0.00000000 0.03120916      4       0
 0.00000000   82 0.000000e+00 0.00000000 0.00000000      0       0

Transition 1 2 
         P time         var     lower     upper n.risk n.event
 0.0000000    3 0.000000000 0.0000000 0.0000000      0       0
 0.4106972   15 0.002589866 0.3109532 0.5104412     51       2
 0.6081627   27 0.002253890 0.5151131 0.7012123     23       1
 0.6651925   41 0.002064292 0.5761426 0.7542425     14       2
 0.6919872   61 0.002000374 0.6043268 0.7796477      4       0
 0.7072985   82 0.001983608 0.6200062 0.7945908      0       0

Transition 1 3 
         P time         var     lower     upper n.risk n.event
 0.0000000    3 0.000000000 0.0000000 0.0000000      0       0
 0.2026916   15 0.001784251 0.1199019 0.2854812     51       1
 0.2706490   27 0.001967639 0.1837087 0.3575892     23       0
 0.2888737   41 0.001981661 0.2016242 0.3761232     14       0
 0.2927015   61 0.001983608 0.2054092 0.3799938      4       0
 0.2927015   82 0.001983608 0.2054092 0.3799938      0       0

> 
> cLOS <- etm::clos(tr.prob, aw = TRUE)
> 
> cLOS
The expected change in length of stay is:
1.975 

Alternative weighting:

Expected change in LOS with weight.1: 2.097 
Expected change in LOS with weight.other: 1.951 
> 
> 
> ### Tests on pseudo values
> t_pseudo <- closPseudo(my.observ, c("0","1","2","3"), tra, NULL,
+                        formula = ~ 1, aw = TRUE)
> 
> cLOS$e.phi == t_pseudo$theta[, "e.phi"]
     [,1]
[1,] TRUE
> cLOS$e.phi.weights.1 == t_pseudo$theta[, "e.phi.weights.1"]
     [,1]
[1,] TRUE
> cLOS$e.phi.weights.other == t_pseudo$theta[, "e.phi.weights.other"]
     [,1]
[1,] TRUE
> 
> mean(t_pseudo$pseudoData$ps.e.phi)
[1] 1.968323
> 
> ### tests on etmprep
> 
> ### creation of fake data in the wild format, following an illness-death model
> ## transition times
> tdisease <- c(3, 4, 3, 6, 8, 9)
> tdeath <- c(6, 9, 8, 6, 8, 9)
> 
> ## transition status
> stat.disease <- c(1, 1, 1, 0, 0, 0)
> stat.death <- c(1, 1, 1, 1, 1, 0)
> 
> ## a covariate that we want to keep in the new data
> set.seed(1313)
> cova <- rbinom(6, 1, 0.5)
> 
> dat <- data.frame(tdisease, tdeath,
+                   stat.disease, stat.death,
+                   cova)
> 
> ## Possible transitions
> tra <- matrix(FALSE, 3, 3)
> tra[1, 2:3] <- TRUE
> tra[2, 3] <- TRUE
> 
> ## data preparation
> newdat <- etmprep(c(NA, "tdisease", "tdeath"),
+                   c(NA, "stat.disease", "stat.death"),
+                   data = dat, tra = tra,
+                   cens.name = "cens", keep = "cova")
> 
> newdat
  id entry exit from   to cova
1  1     0    3    0    1    1
2  1     3    6    1    2    1
3  2     0    4    0    1    0
4  2     4    9    1    2    0
5  3     0    3    0    1    1
6  3     3    8    1    2    1
7  4     0    6    0    2    0
8  5     0    8    0    2    1
9  6     0    9    0 cens    1
> 
> ref <- data.frame(id = c(1, 1, 2, 2, 3, 3, 4, 5, 6),
+                   entry = c(0, 3, 0, 4, 0, 3, 0, 0, 0),
+                   exit = c(3, 6, 4, 9, 3, 8, 6, 8, 9),
+                   from = c(0, 1, 0, 1, 0, 1, 0, 0, 0),
+                   to = c(rep(c(1, 2), 3), 2, 2, "cens"),
+                   cova = c(1, 1, 0, 0, 1, 1, 0, 1, 1))
> ref$from <- factor(as.character(ref$from), levels = c("0", "1", "2", "cens"))
> ref$to <- factor(as.character(ref$to), levels = c("0", "1", "2", "cens"))
> 
> all.equal(ref, newdat)
[1] TRUE
> 
> 
> ######################################
> ### Test the stratified calls
> ######################################
> 
> if (!require(kmi, quietly = TRUE))
+     stop("The following tests require the 'kmi' package")
> 
> library(etm)
> 
> data(icu.pneu)
> my.icu.pneu <- icu.pneu
> 
> my.icu.pneu <- my.icu.pneu[order(my.icu.pneu$id, my.icu.pneu$start), ]
> masque <- diff(my.icu.pneu$id)
> 
> my.icu.pneu$from <- 0
> my.icu.pneu$from[c(1, masque) == 0] <- 1
> 
> my.icu.pneu$to2 <- my.icu.pneu$event
> my.icu.pneu$to2[my.icu.pneu$status == 0] <- "cens"
> my.icu.pneu$to2[c(masque, 1) == 0] <- 1
> 
> 
> my.icu.pneu$to <- ifelse(my.icu.pneu$to2 %in% c(2, 3), 2,
+                          my.icu.pneu$to2)
> 
> my.icu.pneu <- my.icu.pneu[, c("id", "start", "stop", "from", "to",
+                                "to2", "age", "sex")]
> names(my.icu.pneu)[c(2, 3)] <- c("entry", "exit")
> 
> bouh_strat <- etm(my.icu.pneu, c("0", "1", "2"), tra_ill(), "cens", 0, strata = "sex")
> 
> bouh_female <- etm(my.icu.pneu[my.icu.pneu$sex == "F", ],
+                    c("0", "1", "2"), tra_ill(), "cens", 0)
> 
> all(bouh_strat[[1]]$est == bouh_female$est)
[1] TRUE
> 
> ## Test the summary
> the_summary <- summary(bouh_strat)
Warning messages:
1: In sqrt(var) : NaNs produced
2: In sqrt(var) : NaNs produced
> the_summary
sex == "F" 

Transition 0 0 
          P time          var       lower      upper n.risk n.event
 0.99818841    1 3.275928e-06 0.994640964 1.00000000    552       0
 0.25588617   14 3.464633e-04 0.219404336 0.29236801    154       0
 0.08389411   29 1.406133e-04 0.060652765 0.10713545     50       0
 0.02876369   43 5.264372e-05 0.014542981 0.04298441     16       0
 0.01255143   57 2.458443e-05 0.002833402 0.02226946      7       0
 0.00000000   86 0.000000e+00 0.000000000 0.00000000      0       0

Transition 0 1 
           P time          var      lower      upper n.risk n.event
 0.000000000    1 0.000000e+00 0.00000000 0.00000000    552       0
 0.052654698   14 9.057547e-05 0.03400150 0.07130790    154       1
 0.028004684   29 5.032067e-05 0.01410127 0.04190809     50       0
 0.014935832   43 2.732638e-05 0.00469019 0.02518147     16       0
 0.005600937   57 1.037829e-05 0.00000000 0.01191503      7       0
 0.000000000   86 0.000000e+00 0.00000000 0.00000000      0       0

Transition 0 2 
           P time           var     lower       upper n.risk n.event
 0.001811594    1  3.275928e-06 0.0000000 0.005359036    552       1
 0.691459127   14  3.879537e-04 0.6528546 0.730063637    154      13
 0.888101206   29  1.823394e-04 0.8616352 0.914567209     50       5
 0.956300474   43  7.839853e-05 0.9389464 0.973654572     16       1
 0.981847633   57  3.470555e-05 0.9703012 0.993394059      7       1
 1.000000000   86 -1.456897e-19       NaN         NaN      0       0

Transition 1 1 
          P time         var      lower    upper n.risk n.event
 1.00000000    1 0.000000000 1.00000000 1.000000      0       0
 0.89473684   14 0.004956991 0.75674381 1.000000     27       0
 0.35627354   29 0.006363993 0.19991813 0.512629     17       0
 0.19001256   43 0.003916314 0.06735711 0.312668      8       0
 0.07125471   57 0.001608489 0.00000000 0.149861      3       0
 0.00000000   86 0.000000000 0.00000000 0.000000      1       0

Transition 1 2 
         P time          var    lower     upper n.risk n.event
 0.0000000    1 0.000000e+00 0.000000 0.0000000      0       0
 0.1052632   14 4.956991e-03 0.000000 0.2432562     27       0
 0.6437265   29 6.363993e-03 0.487371 0.8000819     17       2
 0.8099874   43 3.916314e-03 0.687332 0.9326429      8       0
 0.9287453   57 1.608489e-03 0.850139 1.0000000      3       0
 1.0000000   86 4.770490e-18 1.000000 1.0000000      1       1

sex == "M" 

Transition 0 0 
           P time          var       lower      upper n.risk n.event
 0.976346912    2 3.034641e-05 0.965549945 0.98714388    761       0
 0.186247294   19 2.012221e-04 0.158444659 0.21404993    151       0
 0.071497462   35 9.063158e-05 0.052838484 0.09015644     54       0
 0.018589340   54 2.579724e-05 0.008634491 0.02854419     15       0
 0.007745558   77 1.147795e-05 0.001105373 0.01438574      5       0
 0.000000000  460 0.000000e+00 0.000000000 0.00000000      1       0

Transition 0 1 
           P time          var       lower       upper n.risk n.event
 0.000000000    2 0.000000e+00 0.000000000 0.000000000    761       0
 0.052695176   19 6.576742e-05 0.036800434 0.068589919    151       0
 0.025063265   35 3.371388e-05 0.013682999 0.036443532     54       0
 0.013246607   54 1.866154e-05 0.004779758 0.021713456     15       0
 0.003311652   77 5.278985e-06 0.000000000 0.007814873      5       0
 0.000000000  460 0.000000e+00 0.000000000 0.000000000      1       0

Transition 0 2 
          P time          var      lower      upper n.risk n.event
 0.02365309    2 3.034641e-05 0.01285612 0.03445005    761      18
 0.76105753   19 2.410244e-04 0.73062917 0.79148589    151      12
 0.90343927   35 1.192585e-04 0.88203538 0.92484316     54       4
 0.96816405   54 4.373712e-05 0.95520202 0.98112609     15       2
 0.98894279   77 1.668176e-05 0.98093765 0.99694793      5       0
 1.00000000  460 1.016440e-20 1.00000000 1.00000000      1       1

Transition 1 1 
          P time         var      lower      upper n.risk n.event
 1.00000000    2 0.000000000 1.00000000 1.00000000      0       0
 0.56197959   19 0.005904656 0.41137251 0.71258668     43       0
 0.20243674   35 0.002450088 0.10542172 0.29945175     18       0
 0.10121837   54 0.001181698 0.03384299 0.16859375      9       0
 0.02530459   77 0.000313977 0.00000000 0.06003397      3       0
 0.00000000  460 0.000000000 0.00000000 0.00000000      0       0

Transition 1 2 
         P time          var     lower     upper n.risk n.event
 0.0000000    2 0.000000e+00 0.0000000 0.0000000      0       0
 0.4380204   19 5.904656e-03 0.2874133 0.5886275     43       3
 0.7975633   35 2.450088e-03 0.7005482 0.8945783     18       1
 0.8987816   54 1.181698e-03 0.8314062 0.9661570      9       0
 0.9746954   77 3.139770e-04 0.9399660 1.0000000      3       1
 1.0000000  460 3.686287e-18 1.0000000 1.0000000      0       0

> 
> ## Test trprob
> all(trprob(bouh_strat, "0 1")[[1]] == trprob(bouh_female, "0 1"))
[1] TRUE
> all(trprob(bouh_strat, "0 1", c(0, 5, 10, 15))[[1]] == trprob(bouh_female, "0 1", c(0, 5, 10, 15)))
[1] TRUE
> 
> ## Test trcov
> all(trcov(bouh_strat, "0 1")[[1]] == trcov(bouh_female, "0 1"))
[1] TRUE
> all(trcov(bouh_strat, c("0 1", "0 2"))[[1]] == trcov(bouh_female, c("0 1", "0 2")))
[1] TRUE
> all(trcov(bouh_strat, "0 1", c(0, 5, 10, 15))[[1]] == trcov(bouh_female, "0 1", c(0, 5, 10, 15)))
[1] TRUE
> 
> proc.time()
   user  system elapsed 
  9.734   0.169   9.837 
